require_relative 'config/application'

db_namespace = namespace :db do
  def create_database config
    options = {charset: 'utf8'}

    create_db = lambda do |config|
      ActiveRecord::Base.establish_connection config.merge(@admin_config)
      ActiveRecord::Base.connection.create_database config[:database], options
      ActiveRecord::Base.establish_connection config
    end

    create_db.call config
  end

  task :environment do
    MIGRATIONS_DIR = ENV['MIGRATIONS_DIR'] || 'db/migrate'
  end

  task configuration: :environment do
    admin_config = {database: 'postgres', schema_search_path: 'public'}

    @config = Books.database_config
    @admin_config = @config.merge(admin_config)
  end

  task configure_connection: :configuration do
    ActiveRecord::Base.establish_connection @config
    ActiveRecord::Base.logger = Logger.new STDOUT
  end

  task configure_admin_connection: :configuration do
    ActiveRecord::Base.establish_connection @admin_config
    ActiveRecord::Base.logger = Logger.new STDOUT
  end

  desc 'Create the database from config/database.yml for the current APP_ENV'
  task create: :configure_admin_connection do
    create_database @config
    puts 'Database created.'
  end

  desc 'Drops the database for the current APP_ENV'
  task drop: :configure_admin_connection do
    ActiveRecord::Base.connection.drop_database @config[:database]
    puts 'Database dropped.'
  end

  desc 'Migrate the database (options: VERSION=x, VERBOSE=false).'
  task migrate: :configure_connection do
    ActiveRecord::Migration.verbose = true
    ActiveRecord::Migrator.migrate MIGRATIONS_DIR, ENV['VERSION'] ? ENV['VERSION'].to_i : nil
    db_namespace['schema:dump'].invoke
  end

  desc 'Rolls the schema back to the previous version (specify steps w/ STEP=n).'
  task rollback: :configure_connection do
    step = ENV['STEP'] ? ENV['STEP'].to_i : 1
    ActiveRecord::Migrator.rollback MIGRATIONS_DIR, step
    db_namespace['schema:dump'].invoke
  end

  desc 'Retrieves the current schema version number'
  task version: :configure_connection do
    puts "Current version: #{ActiveRecord::Migrator.current_version}"
  end

  desc 'Seed the database'
  task seed: :configure_connection do
    require_relative 'config/application'
    require_relative 'db/seeds'
  end

  namespace :schema do
    task load: :configure_connection do
      load('db/schema.rb')
    end

    task dump: :configure_connection do
      File.open('db/schema.rb', 'w:utf-8') do |file|
        ActiveRecord::SchemaDumper.dump(ActiveRecord::Base.connection, file)
      end
    end
  end
end
